{"version":3,"sources":["questions.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["questions","code","App","React","useState","questionIndex","setQuestionIndex","userAnswer","setUserAnswer","correctAnswer","setCorrectAnswer","showNextButton","setShowNextButton","correctCount","setCorrectCount","wrongCount","setWrongCount","done","setDone","question","selectAnswer","bool","answer","window","eval","style","margin","display","gridAutoRows","gridAutoColumns","AppBar","position","Toolbar","justifyContent","Typography","variant","overflow","Paper","padding","elevation","length","Divider","value","rows","split","cols","Math","max","map","s","flexDirection","Button","onClick","color","fontWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd9caa7b.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\ninterface Question {\n  code: string,\n}\n\nexport const questions: Question[] = [\n  {\n    code: '{} == 0', // error\n  },\n  {\n    code: '{} - 1 == -1', // true\n  },\n  {\n    code: '(1 / 0) == (1 / 0)', // true\n  },\n  {\n    code: '{} + [] == 0', // true\n  },\n  {\n    code: 'Math.PI * ({} + []) / -1 == -Infinity / Infinity', // false\n  },\n  {\n    code: 'true + false == true', // true\n  },\n  {\n    code: 'false / false == false / false', // false\n  },\n  {\n    code: 'typeof void typeof void typeof undefined === \"undefined\"', // true\n  },\n  {\n    code: 'null >= 0 || null <= 0', // true\n  },\n  {\n    code: 'null > 0 || null < 0 || null === 0', // false\n  },\n  {\n    code: 'new Date(-1) > new Date(-2)', // true\n  },\n  {\n    code: 'new Date(0) > new Date(-1)', // true\n  },\n  {\n    code: 'new Date(0) > new Date(Number.MIN_SAFE_INTEGER)', // false\n  },\n  {\n    code: 'Date() instanceof Date', // false\n  },\n  {\n    code: 'String() instanceof String', // false\n  },\n  {\n    code: 'Error() instanceof Error', // true\n  },\n  {\n    code: `(() => {\n  var b = false;\n  let b = true;\n  return b;\n})()`, // false\n  },\n  {\n    code: `(() => {\n  let count = 0;\n  for (var i = 0; i < 10; i += 1) {\n    count += 1;\n  }\n  for (var i = 0; i < 10; i += 1) {\n    count += 1;\n  }\n  return count === 20;\n})()`,\n  }, // true\n  {\n    code: `(() => {\n  const funcs = []\n  for (var i = 0; i < 5; i += 1) {\n    funcs.push(() => i);\n  }\n  return funcs[0] + funcs[1] + funcs[3] === 4;\n})()`,\n  }, // false\n  {\n    code: `(() => {\n  Infinity = NaN;\n  return Infinity != Infinity;\n})()`\n  }, // true\n  {\n    code: `(() => {\n  return {} == {};\n})()`\n  }, // false\n  {\n    code: `(() => {\n  const m = [].map;\n  return 'length' in m;\n})()`\n  }, // true\n  {\n    code: `(() => {\n  const m = [].map;\n  const a = m(x => x);\n  return 'length' in a;\n})()`\n  }, // false\n  {\n    code: `(() => {\n  const keys = [];\n  for (const key in [].__proto__) {\n    keys.push(key);\n  }\n  return keys.length > 0;\n})()`\n  }, // false\n  {\n    code: `(() => {\n  return Function(() => true)();\n})()`\n  }, // false\n];\n","import {\n  AppBar, Button, Divider, Paper, Toolbar, Typography,\n} from '@material-ui/core';\n// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport './App.css';\n// eslint-disable-next-line import/no-unresolved\nimport { questions } from './questions';\n\n\nfunction App() {\n\n  const [questionIndex, setQuestionIndex] = React.useState(0);\n  const [userAnswer, setUserAnswer] = React.useState(false);\n  const [correctAnswer, setCorrectAnswer] = React.useState(false);\n  const [showNextButton, setShowNextButton] = React.useState(false);\n  const [correctCount, setCorrectCount] = React.useState(0);\n  const [wrongCount, setWrongCount] = React.useState(0);\n  const [done, setDone] = React.useState(false);\n  const question = questions[questionIndex];\n  \n\n  const selectAnswer = (bool: boolean) => {\n    setUserAnswer(bool);\n    let answer = true;\n    try {\n      answer = window.eval(question.code) === true\n    } catch {\n      answer = false\n    }\n    setCorrectAnswer(answer);\n    if (answer === bool) {\n      setCorrectCount(correctCount + 1)\n    } else {\n      setWrongCount(wrongCount + 1)\n    }\n    setShowNextButton(true)\n  }\n\n  const onNextClick = () => {\n    setShowNextButton(false);\n    if (questionIndex === questions.length - 1) {\n      setDone(true);\n    } else {\n      setQuestionIndex(questionIndex + 1);\n    }\n  }\n\n  if (done) {\n    return <div style={{margin: 30}}>{`Done! ${correctCount} Correct, ${wrongCount} Wrong`}</div>\n  }\n\n  return (\n    <div style={{\n      display: 'grid',\n      gridAutoRows: 'min-content auto',\n      gridAutoColumns: '100%',\n    }}\n    >\n        <AppBar position=\"static\">\n        <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h6\">\n            JS Exam\n          </Typography>\n          <Typography variant=\"h6\">\n            {`${correctCount} Correct, ${wrongCount} Wrong`}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div style={{ overflow: 'auto' }}>\n        <Typography style={{margin: 15}}>\n          Expressions are passed into window.eval() using your browser. Try to guess if they return true. Some expressions may throw an error - these do not return true.\n        </Typography>\n        <Paper style={{margin: 15, padding: 15}} elevation={5}>\n          <Typography variant=\"h4\">{`Question ${questionIndex + 1} / ${questions.length}`}</Typography>\n          <Divider />\n          <textarea \n            style={{margin: 15}} \n            value={question.code} \n            rows={question.code.split('\\n').length} \n            cols={Math.max(...question.code.split('\\n').map(s => s.length))}\n          />\n          <div style={{display: 'flex', flexDirection: 'row-reverse'}}>\n            {\n              showNextButton \n              ? <>\n              <Button variant=\"outlined\" onClick={() => onNextClick()}>Next</Button>\n              <Typography style={{margin: 5, color: userAnswer === correctAnswer ? 'green' : 'red', fontWeight: 600}}>{`${userAnswer === correctAnswer ? 'Correct!' : 'Incorrect!'} The expression returns ${correctAnswer ? 'true' : 'something else'}`}</Typography>\n              </>\n              : <>\n                <Button onClick={() => selectAnswer(true)}>true</Button>\n                <Button onClick={() => selectAnswer(false)}>not true</Button>\n              </>\n            }\n\n          </div>\n        </Paper>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}